#!/usr/bin/env ruby

require 'mrm'
require 'optparse'
require 'ostruct'

options = OpenStruct.new

OptionParser.new do |opts|
  opts.banner = "Usage: mrm [options] <command>\n\nOptions:"

  opts.on('-v', '--version', 'Prints gem version') do |v|
    options.v = true
  end

  opts.on('-h', '--help', 'Display this help') do
    puts opts.to_s.split("\n")
    puts "\nCommands:"
    [
      ['config', '', '', "Saves registry credentials\n"],
      ['check', '', '', "Checks registry availability\n"],
      ['list', '', '', "Lists repositories of the registry\n"],
      ['list', '*repo*', '', "Lists tags of the specific repository\n"],
      ['get', '*repo*', '*reference*', "Pulls a manifest for the image\n"],
      ['delete', '*repo*', '*reference*', "Deletes an image from the specific repository\n"]
    ].each do |args|
      printf("    %-7s %-7s %-16s %-20s", *args)
    end
    abort
  end
end.parse!

if options.v
  puts MRM::Version.to_s
  abort
end

if !File.file?("#{Dir.home}/.mrmconfig") && ARGV[0] != 'config'
  puts "Run 'mrm config' to configure credentials first"
  abort
end

client = MRM::Client.new
case ARGV[0]
when 'config'
  print 'Registry url(ex: https://registry.example.com): '
  url = STDIN.gets.strip
  print 'Login: '
  login = STDIN.gets.strip
  print 'Password: '
  password = STDIN.noecho(&:gets).strip
  MRM::ConfigStorage.new(url, login, password).store!
when 'check'
  client.version_check
when 'delete'
  puts 'Wrong number of arguments' if ARGV[1].nil? || ARGV[2].nil?
  client.delete_image(ARGV[1], ARGV[2])
when 'get'
  puts 'Wrong number of arguments' if ARGV[1].nil? || ARGV[2].nil?
  client.get_manifest(ARGV[1], ARGV[2])
when 'list'
  if ARGV[1].nil?
    client.list_repositories
  else
    client.list_tags(ARGV[1])
  end
else
  puts 'Unknown command supplied'
end
